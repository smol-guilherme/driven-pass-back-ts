// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  credentials Credentials[]
  notes       Notes[]
  documents   Documents[]
  networks    Networks[]
}

model Credentials {
  id        Int       @id @default(autoincrement())
  url       String
  title     String
  username  String
  password  String
  owner     Users?    @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId   Int
  createdAt DateTime? @default(now())

  @@unique([ownerId, id])
  @@unique([ownerId, title])
}

model Notes {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  owner       Users    @relation(fields: [ownerId], references: [id])
  ownerId     Int
  createdAt   DateTime @default(now())

  @@unique([ownerId, id])
  @@unique([ownerId, title])
}

model Documents {
  id             Int      @id @default(autoincrement())
  title          String
  cardholderName String
  number         String
  expirationDate String
  password       String
  CVV            String
  isVirtual      Boolean
  type           Types
  owner          Users    @relation(fields: [ownerId], references: [id])
  ownerId        Int
  createdAt      DateTime @default(now())

  @@unique([ownerId, id])
  @@unique([ownerId, title])
}

model Networks {
  id        Int      @id @default(autoincrement())
  name      String
  title     String
  password  String
  owner     Users    @relation(fields: [ownerId], references: [id])
  ownerId   Int
  createdAt DateTime @default(now())

  @@unique([ownerId, id])
}

enum Types {
  credit
  debit
  full
}
